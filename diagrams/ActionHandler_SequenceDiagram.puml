@startuml
'https://plantuml.com/sequence-diagram

autonumber
hide footbox

Participant "ah:ActionHandler" as actionHandler
Participant "ba:Bank" as bank
Participant "bo:Board" as board
Participant "p[]:Player" as player
Participant "de:Deck" as deck
Participant "s:Square" as square


-> actionHandler: new(board)
actionHandler -> bank:new
actionHandler -> actionHandler:setBoard
actionHandler -> deck:new


-> actionHandler : squareAction(player, square, diceSum)
alt#Gold #LightBlue squareName=="Street"
    actionHandler -> square:getOwner()
    actionHandler <-- square:return owner:Player
    alt#Gold #LightGreen owner == null
        actionHandler->actionHandler:buySquare(player, square, "buyStreet")
    else #LightGreen
        actionHandler->square:getPOSITION()
        actionHandler<--square:return squarePosition
        actionHandler->board:getCurrentCost(squarePosition)
        actionHandler<--board: return amountToPay
        actionHandler->actionHandler:payRent(player, square, amountToPay)
    end

else #Pink squareName=="Brewery"
    actionHandler -> square:getOwner()
    actionHandler <-- square:return owner:Player
    alt#Gold #LightGreen owner == null
        actionHandler->actionHandler:buySquare(player, square, "buyBrewery")
    else #LightGreen
        actionHandler->square:getPOSITION()
        actionHandler<--square:return squarePosition
        actionHandler->board:getCurrentCost(squarePosition)
        actionHandler<--board: return currentCost
        actionHandler->actionHandler:amountToPay= currentCost * diceSum
        actionHandler->actionHandler:payRent(player, square, amountToPay)
    end

else #LightBlue squareName=="Ferry"
    actionHandler -> square:getOwner()
    actionHandler <-- square:return owner:Player
    alt#Gold #LightGreen owner == null
        actionHandler->actionHandler:buySquare(player, square, "buyFerry")
    else #LightGreen
        actionHandler->square:getPOSITION()
        actionHandler<--square:return squarePosition
        actionHandler->board:getCurrentCost(squarePosition)
        actionHandler<--board: return amountToPay
        actionHandler->actionHandler:payRent(player, square, amountToPay)
    end

else #Pink squareName=="Tax"
    actionHandler->square:getAmount()
    actionHandler<--square:return amount
    actionHandler->bank:payToBank(player, amount)
    bank->player:getBalance()
    bank<--player:return balance
    alt #LightGreen amount>balance
        bank->player:setBalance(0)
        player->player: setBalance
    else
        bank->player:setBalance(balance-amount)
        player->player: setBalance
    end
else #LightBlue squareName=="IncomeTax"
      actionHandler->actionHandler:incomeTaxAction(player, square)

else #Pink squareName=="Chance"
      actionHandler->actionHandler:cardAction(player)

else #LightBlue squareName=="GoToPrison"
      actionHandler->board:setPlayerInJail(player)
      board->board:setPlayerInJail(player)
end

@enduml