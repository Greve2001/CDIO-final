@startuml

hide footbox

Participant ": GameController" as GameC
Participant ": Board" as Board
Participant ": GUIController" as GuiC
Participant ": ActionHandler" as AH
Participant ": Player" as Player
Participant ": DiceCup" as DiceCup


-> GameC : new GameController()
Activate GameC
-> GameC : setupGame()
    GameC -> DiceCup : new DiceCup
        Activate DiceCup
    GameC -> Board : new Board()
        Activate Board
        Board -> AH : new ActionHandler()
            Activate AH
    GameC -> Board : getAllSquares()
    GameC <-- Board : allSquares : Square[]
    GameC -> GuiC : new GUIController(allSquares)
        Activate GuiC
    GameC -> GuiC : createPlayers()
    GameC -> GuiC : getPlayerNames()
    GameC <-- GuiC : playerNames : String[]
    GameC -> GameC : setupPlayers()
    loop for all Players
        GameC -> Player : new Player() : loop
            Activate Player
    end

-> GameC : startGame()
    GameC -> GuiC : givePlayerChoice(choices : String[])
    GameC <-- GuiC : answer : String

    opt (answer == "takeTurn")
        GameC -> GameC : takeTurn()

        GameC -> DiceCup : rollDice()
        GameC -> DiceCup : getFaceValues()
        GameC <-- DiceCup : faceValues() : int[]
        GameC -> GuiC : showDice(faceValues)

        GameC -> Board : updatePlayerPosition(Player, diceSum)
            Board -> Player : setPosition(endPosition:int)
            Board -> GuiC : movePlayer(Player.getName(), startPos:int, diceSum:int)
            Board -> AH : squareAction(Player, Square, diceSum)
            alt switch(square.type)
                AH -> AH : squareAction()
            end
    end
@enduml