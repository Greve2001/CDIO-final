@startuml

skinparam groupInheritance 2

skinparam linetype polyline

package Board
{
     class Board {
     -ALL_SQUARES : square[]
     -ACTIONHANDLER : ActionHandler
     -jailposition : int

    -payStartBonus(Player) : void
    -stringArrayToIntArray(String[], size:int) : int[]
    +hasMonopoly() : boolean
    +movePlayer(Player, spacesToMove:int) : void
    +setPlayerPosition(Player, position:int) : void

    }
     abstract class Square {
         -name : String
         -position : int
     }
     class Street{
        -amountOfHouses : int

     }
     abstract class Ownable{
        -COLOR : String
        -PRICE : int
        -RENT : int[]
        -owner : Player
        -pledge : boolean
     }
     class incomeTax{
       AMOUNT : int
       PERCENTAGE : int
     }
     class Tax{
        -AMOUNT : int
     }
     class Ferry{
     }
     class Brewery{
     }
     class GoToPrison{
     }
     class Prison{
     }
     class Refugee{
     }
     class Start{
     }
     class Chance{
     }
}
package Cards
{
   abstract class chanceCard{
       #amount :dobule
       #fieldToMove :int
       -description

       +updateBalancePositive(double amount) : double
       +updateBalanceNegative(double amount) : double
       +moveNumOfFields(int fieldsmove) : int
   }
   class Deck{
      -chanceCardCheck :Chancecard[]
      -drawCardCoubt : int

      +pullCard(): chanceCard
   }
   class ChanceCardLogic{
   }
   class MoveFieldsChanceCard{

   }
   class PayMoneyChanceCard{

   }
   class ReceiveMoneyChanceCard{

   }
}

package Logic{
   class Player{
    -NAME : String
    -balance : int
    -position : int
    -color : Color
    -active : boolean
    -inJail : boolean

    +toString(): String

     }
     class Die {
         -faceValue : int

         +roll() : void
     }

     class DiceCup {
         -dice : Die[]

         +rollDice() : void
         +getFaceValues() : int[]
     }
     class Bank {
         -housesAvailable : int
         -hotelsAvailable : int


         +payToBank(Player, amount:int) : void
         +payToPlayer(Player, amount:int) : void
         +payPlayer(Player, amount:int) : void

     }
     class ActionHandler {
         -BANK : Bank
         -board : Board

         +squareAction(Player player, Square square): void
         +streetAction(Player player, Square square): void
         +breweryAction(Player player, Square square): void
         +ferryAction(Player player, Square square): void
         +taxAction(Player player, Square square): void
         +incomeTaxAction(Player player, Square square): void
         +goToPrison(Player player): void
         +cardAction(): void


     }
     class GameController {
         -START_MONEY : int
         -doublesRolled :int
         -hasExtraTurn : boolean
         -currentPlayer : Player
         -diceCup :DiceCup
         -board : Board
         -players : Player[]
         -playerLeft : int

         -setupPlayers(String[] playernames)
         -takeTurn(): void
         -changeTurn() : void
         +setupGame() : void
         +playGame() : void


     }
}
package Interface{
class GUIController{
      {static} -testing : boolean
      {static} -gui : GUI
      {static} -colorToChooseFrom : Color[]
      {static} -playerNames : String[]
      {static} -guiPlayers : GUI_Player
      {static} -playerPositions : int[]
      {static} -GUIFields : GUI_Field[]
      {static} -fields : Square[]
      {static} -gameBoard : Board
      {static} -moveTime : int

      {static} +createBoard(Square[] inputSquares): GUI_FIELD
      {static} +createPlayers(int startBalance): void
      {static} +movePlayer(Player player, int destination: void)
      {static} +showDice(int[] facevalues): void
      {static} +setHouses(int position, int amount): void
      {static} +setHotel(int position, boolean bool): void
      {static} +setOwner(Player player, int position): void
      {static} +updateRent(int position): void
      {static} +posToStreet(int position): GUI_Street
      {static} +givePlayerChoice(String msg, String[] choices): String
      {static} +askPlayerAccept(String msg): boolean
      {static} +convertColor(String colorStr): Color
}

}
package Utilities
{
  class CSVReader{
    -FILESCANNER :Scnaner
    -DELIMITER : String
    -file : String[][]
    -size : int

    -readLine(): String[]
    -fileAsArr(): String[][]
    -trimArrLength(): String[][]
    +close(): void
    +toString(): String
  }
  class Language{
     {static} instance : Language
     {static} language : CSVReader
     {static} langInUse: String

     {static} -chooseLanguage(String lang): void
     {static} +getInstace() : Language
     {static} +get(String textToRetrieve) : String


  }
}



GameController -l- GUIController
Bank -- ActionHandler
GameController -- DiceCup
DiceCup -- Die
GameController -d- Player

ActionHandler -u- Deck
GameController *-d- Board
Board *-d- Square
Square <|-- Tax
Square <|-- Ownable
Square <|-- incomeTax
Square <|-- Start
Square <|-- Refugee
Square <|-- GoToPrison
Square <|-- Prison
Square <|-- Chance
Ownable <|-- Street
Ownable <|-- Ferry
Ownable <|-- Brewery



Deck -- chanceCard
chanceCard <|-- MoveFieldsChanceCard
chanceCard <|-- PayMoneyChanceCard
chanceCard <|-- ReceiveMoneyChanceCard

Board -l- CSVReader
Board *- ActionHandler







@enduml